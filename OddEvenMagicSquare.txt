//Odd even magic square
#include <stdio.h>
#include <stdlib.h>
#define N 99
void OddMagicSquare(int ms[][N],int n,int beginl,int beginr,int start,int end);
int main()
{
    int ms[N][N] = {{0}};
    int i = 0,j = 0,m = 0,n = 0,sm = 0,n0 = 0;

    printf("输入幻方的阶数：");
    scanf("%d",&n);

   //分解为四个奇幻方
    n0 = n;
    m = n/4;
    n = 2*m + 1;
    sm = n * n;

   //填充每个奇幻方
   OddMagicSquare(ms,n,0,0,1,sm);
   OddMagicSquare(ms,n,n,n,sm + 1,2*sm);
   OddMagicSquare(ms,n,0,n,2*sm + 1, 3*sm);
   OddMagicSquare(ms,n,n,0,3*sm + 1, 4*sm);

   for(i = 0;i < n0; i++ )
   {
       for(j = 0;j < n0; j++)
        printf("%3d ",ms[i][j]);
       printf("\n\n");
   }
    return 0;
}
/*
*Name: 奇幻方的打印
*Version: 1.1（修改了第一个j；）
*Inputs:要打印的幻方：a[N][N];奇幻方的阶数：n;从第几行和第几列开始：beginl, beginr;
*       第一个元素的数字：start；最后一个元素的值:end;
*Author:LiuNing
*Time:2019.2.13
*
*/
void OddMagicSquare(int ms[][N],int n,int beginl,int beginr,int start,int end)
{
    int i = beginl, j = beginr,c = start + 1,lastr = 0;
/*改*/    lastr = beginr + n;
/*改*/  j = (beginr + lastr)/2;//中间的一位是最后一个与第一个的和除以2：v 1.1改正
     ms[i][j] = start;


    while(c <= end)
    {
        if(i <= beginl)
            i = beginl + n -1;
        else
        i--;
        if(j >= beginr+n - 1)
            j = beginr;
        else
            j++;

        if(ms[i][j] != 0&&i !=beginl + n-1 &&j !=beginr)
           {
               i=i+2;
               j--;
           }
           else if(ms[i][j] != 0&&i == beginl+n-1&&j != beginr)
           {
               i = beginl + 1;
               j--;
           }
           else if(ms[i][j] != 0&&i != beginl+n-1&& j == beginr)
           {
               i = i+2;
               j = beginr +n - 1;
           }
           else if(ms[i][j] !=0 &&i == beginl+n - 1 && j==beginr)
           {
               i = beginl + 1;
               j = beginr+ n - 1;
           }

        ms[i][j] = c;
        c++;
    }

    /*for(i = beginl;i < beginl+n;i++)
    {
        for(j = beginr;j < n;j++)
            printf("%2d ",ms[i][j]);
        printf("\n");
    }*/
}